import{_ as d,C as a,c as T,o as s,ae as o,j as t,G as r,a as i,w as n}from"./chunks/framework.Ck3L_38O.js";const b=JSON.parse('{"title":"Grammar","description":"","frontmatter":{},"headers":[],"relativePath":"English-Lesson-1.md","filePath":"English-Lesson-1.md"}'),m={name:"English-Lesson-1.md"},p={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.181ex"},xmlns:"http://www.w3.org/2000/svg",width:"11.464ex",height:"2.676ex",role:"img",focusable:"false",viewBox:"0 -661 5067 1183","aria-hidden":"true"};function h(u,e,c,f,g,w){const Q=a("mjx-assistive-mml"),l=a("mjx-container");return s(),T("div",null,[e[4]||(e[4]=o('<h1 id="grammar" tabindex="-1">Grammar <a class="header-anchor" href="#grammar" aria-label="Permalink to &quot;Grammar&quot;">​</a></h1><h2 id="_1-personal-pronoun" tabindex="-1">1.personal pronoun <a class="header-anchor" href="#_1-personal-pronoun" aria-label="Permalink to &quot;1.personal pronoun&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>me, I, you, it, he, she, we, they, him, her, us, them.</span></span></code></pre></div><h2 id="_2-possssive-prounon" tabindex="-1">2.possssive prounon <a class="header-anchor" href="#_2-possssive-prounon" aria-label="Permalink to &quot;2.possssive prounon&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mine,yours,his,her,ours,theirs</span></span></code></pre></div><h2 id="_3-tense" tabindex="-1">3.tense <a class="header-anchor" href="#_3-tense" aria-label="Permalink to &quot;3.tense&quot;">​</a></h2><table tabindex="0"><thead><tr><th>tense</th><th><em>word</em> Example:fly</th></tr></thead><tbody><tr><td>simple past</td><td>flew</td></tr><tr><td>past progressive</td><td>was/were+flying</td></tr><tr><td>past perfect</td><td>had flown</td></tr><tr><td>past perfect progressive</td><td>had been flying</td></tr><tr><td>---</td><td></td></tr><tr><td>simple persent</td><td>fly(plural)/flies(singular)</td></tr><tr><td>persent progressive</td><td>is/are+flying</td></tr><tr><td>present perfect</td><td>have/has flown</td></tr><tr><td>present prefect progressive</td><td>have/has been flown</td></tr><tr><td>---</td><td></td></tr><tr><td>simple future</td><td>will fly</td></tr><tr><td>future progressive</td><td>will be flying</td></tr><tr><td>future perfect</td><td>will have/has flown</td></tr><tr><td>future perfect progressive</td><td>will have been flying</td></tr></tbody></table><h2 id="_4-base-and-suffix" tabindex="-1">4.base and suffix <a class="header-anchor" href="#_4-base-and-suffix" aria-label="Permalink to &quot;4.base and suffix&quot;">​</a></h2>',8)),t("ul",null,[t("li",null,[r(l,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:n(()=>[(s(),T("svg",p,[...e[0]||(e[0]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"munder"},[t("g",{"data-mml-node":"mrow"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D45D",d:"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(503,0)"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(954,0)"},[t("path",{"data-c":"1D45C",d:"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1439,0)"},[t("path",{"data-c":"1D454",d:"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1916,0)"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2367,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2833,0)"},[t("path",{"data-c":"1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z",style:{"stroke-width":"3"}})])]),t("g",{"data-mml-node":"mo",transform:"translate(0,-670)"},[t("svg",{width:"3302",height:"237",x:"0",y:"148",viewBox:"825.5 148 3302 237"},[t("path",{"data-c":"2013",d:"M0 248V285H499V248H0Z",transform:"scale(9.906,1)",style:{"stroke-width":"3"}})])])]),t("g",{"data-mml-node":"mi",transform:"translate(3302,0)"},[t("path",{"data-c":"1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(3771,0)"},[t("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(4116,0)"},[t("path",{"data-c":"1D463",d:"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(4601,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})])])],-1)])])),r(Q,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:n(()=>[...e[1]||(e[1]=[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("munder",null,[t("mrow",null,[t("mi",null,"p"),t("mi",null,"r"),t("mi",null,"o"),t("mi",null,"g"),t("mi",null,"r"),t("mi",null,"e"),t("mi",null,"s")]),t("mo",{accent:"true"},"―")]),t("mi",null,"s"),t("mi",null,"i"),t("mi",null,"v"),t("mi",null,"e")],-1)])]),_:1})]),_:1}),e[2]||(e[2]=i("}adj",-1))]),e[3]||(e[3]=t("li",null,"base suffix",-1))])])}const v=d(m,[["render",h]]);export{b as __pageData,v as default};
